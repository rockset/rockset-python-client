```python
from {{packageName}} import *
from {{packageName}}.models import *
from pprint import pprint

# Create an instance of the Rockset client
rs = RocksetClient(api_key="abc123", host=Regions.use1a1)

# synchronous example passing only required values which don't have defaults set
{{#summary}}
# {{{.}}}
{{/summary}}
{{#returnType}}api_response = {{/returnType}}rs.{{classname}}.{{{operationId}}}(
{{#requiredParams}}
{{^isReadOnly}}
{{^defaultValue}}
{{^isBodyParam}}
{{^isReadOnly}}
    {{paramName}}={{#example}}{{{.}}}{{/example}}{{^example}}{{paramName}}{{/example}},
{{/isReadOnly}}
{{/isBodyParam}}
{{#isBodyParam}}
{{#requiredVars}}
{{^isReadOnly}}
    {{name}}={{#example}}{{{.}}}{{/example}}{{^example}}{{name}}{{/example}},
{{/isReadOnly}}
{{/requiredVars}}
{{/isBodyParam}}
{{/defaultValue}}
{{/isReadOnly}}
{{/requiredParams}}
)
{{#returnType}}
pprint(api_response)
{{/returnType}}
# Error responses from the server will cause the client to throw an ApiException
# except ApiException as e:
#     print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)

# asynchronous example passing optional values and required values which don't have defaults set
# assumes that execution takes place within an asynchronous context
{{#summary}}
# {{{.}}}
{{/summary}}
{{#returnType}}api_response = await {{/returnType}}rs.{{classname}}.{{{operationId}}}(
{{#requiredParams}}
{{^isReadOnly}}
{{^defaultValue}}
{{^isBodyParam}}
{{^isReadOnly}}
    {{paramName}}={{#example}}{{{.}}}{{/example}}{{^example}}{{paramName}}{{/example}},
{{/isReadOnly}}
{{/isBodyParam}}
{{#isBodyParam}}
{{#vars}}
{{^isReadOnly}}
    {{name}}={{#example}}{{{.}}}{{/example}}{{^example}}{{name}}{{/example}},
{{/isReadOnly}}
{{/vars}}
{{/isBodyParam}}
{{/defaultValue}}
{{/isReadOnly}}
{{/requiredParams}}
    async_req=True,
)
if isinstance(api_response, rockset.ApiException):
    print("Exception when calling {{classname}}->{{operationId}}: %s\n" % e)
    return
{{#returnType}}
pprint(api_response)
{{/returnType}}

```
