"""
    REST API

    Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from unittest import mock

from rockset_v2.models import *
from test.conftest import EarlyExit, validate_call


def test_add_documents(get_client, mock_request, request_validator):
    with mock_request:
        rs = get_client
        try:
            rs.Documents.add_documents(
                collection="collection_example",
                data=[{"field": "value"}],
            )
        except EarlyExit as e:
            validate_call(e, request_validator)


def test_delete_documents(get_client, mock_request, request_validator):
    with mock_request:
        rs = get_client
        try:
            rs.Documents.delete_documents(
                collection="collection_example",
                data=[
                    DeleteDocumentsRequestData(
                        id="2cd61e3b",
                    ),
                ],
            )
        except EarlyExit as e:
            validate_call(e, request_validator)


def test_patch_documents(get_client, mock_request, request_validator):
    with mock_request:
        rs = get_client
        try:
            rs.Documents.patch_documents(
                collection="collection_example",
                data=[
                    PatchDocument(
                        id="ca2d6832-1bfd-f88f-0620-d2aa27a5d86c",
                        patch=[
                            PatchOperation(
                                _from="_from_example",
                                op="ADD",
                                path="/foo/bar",
                                value={},
                            ),
                        ],
                    ),
                ],
            )
        except EarlyExit as e:
            validate_call(e, request_validator)
