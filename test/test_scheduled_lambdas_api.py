"""
    REST API

    Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!  # noqa: E501

    The version of the OpenAPI document: v1
    Generated by: https://openapi-generator.tech
"""


from unittest import mock

from rockset.models import *
from test.conftest import EarlyExit, validate_call


def test_create(get_client, mock_request, request_validator):
    with mock_request:
        rs = get_client
        try:
            rs.ScheduledLambdas.create(
                apikey="qoiwkjndksd",
                cron_string="* * * * *",
                ql_name="ql_name",
                tag="production",
                total_times_to_execute=1,
                version="abcdef1234",
                webhook_auth_header="bearer qiowjkjkdskdskldio",
                webhook_payload="string_example",
                webhook_url="https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX",
            )
        except EarlyExit as e:
            validate_call(e, request_validator)


def test_delete(get_client, mock_request, request_validator):
    with mock_request:
        rs = get_client
        try:
            rs.ScheduledLambdas.delete(
                scheduled_lambda_id="scheduledLambdaId_example",
            )
        except EarlyExit as e:
            validate_call(e, request_validator)


def test_update(get_client, mock_request, request_validator):
    with mock_request:
        rs = get_client
        try:
            rs.ScheduledLambdas.update(
                scheduled_lambda_id="scheduledLambdaId_example",
                apikey="qoiwkjndksd",
                resume_permanent_error=True,
                total_times_to_execute=1,
                webhook_auth_header="bearer qiowjkjkdskdskldio",
                webhook_payload="string_example",
                webhook_url="https://hooks.slack.com/services/T00000000/B00000000/XXXXXXXXXXXXXXXXXXXXXXXX",
            )
        except EarlyExit as e:
            validate_call(e, request_validator)
